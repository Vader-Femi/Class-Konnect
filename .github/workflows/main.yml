name: Android CI

on: 
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
    tags:
      - 'v*'

jobs:

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.4
        with: 
          java-version: 17
          distribution: "zulu"
          cache: gradle
      - name: Run Tests
        run: bash ./gradlew test --stacktrace  
        
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
        
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.4
        with: 
          java-version: 17
          distribution: "zulu"
          cache: gradle
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        
      - name: Caching Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Make gradlew executable
        run: chmod +x gradlew
        
      - name: Build with Gradle
        run: ./gradlew build
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with: 
          name: app
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30
  release:
    name: Release APK
    needs: build
    # if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: app 
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: Release ${{ steps.get_tag.outputs.tag }}
          draft: false
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-debug.apk
          asset_name: Class-Konnect.apk
          asset_content_type: application/zip
